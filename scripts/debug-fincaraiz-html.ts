#!/usr/bin/env tsx

/**
 * Debug Fincaraiz con HTML est√°tico - an√°lisis directo
 */

import * as cheerio from 'cheerio';
import axios from 'axios';

async function debugFincaraizHtml() {
  console.log('üîç DEBUG FINCARAIZ HTML EST√ÅTICO\n');

  try {
    // URLs exactas
    const searchUrl = 'https://www.fincaraiz.com.co/venta/apartamentos/usaquen/bogota';
    const samplePropertyUrl = 'https://www.fincaraiz.com.co/proyectos-vivienda/ciudad-la-salle-burdeos-apartamentos-en-venta-en-alameda-bogota/7203484';
    
    console.log(`üìç Analizando p√°gina de resultados: ${searchUrl}\n`);

    // M√©todo 1: An√°lisis con Axios + Cheerio (HTML est√°tico)
    console.log('üöÄ M√âTODO 1: An√°lisis con Axios + Cheerio (HTML est√°tico)\n');
    
    const response = await axios.get(searchUrl, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'es-CO,es;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
      }
    });
    
    const $ = cheerio.load(response.data);
    
    console.log('üìÑ Analizando HTML est√°tico...');
    console.log(`üìä Tama√±o del HTML: ${response.data.length} caracteres\n`);
    
    // Buscar diferentes selectores posibles
    const possibleSelectors = [
      '.MuiGrid-item',
      '.property-card',
      '.listing-item',
      '[data-testid*="property"]',
      '.card',
      'article',
      '.result-item',
      '.property',
      '.inmueble',
      '.listing',
      '.item'
    ];
    
    console.log('üîç Buscando selectores de propiedades:');
    possibleSelectors.forEach(selector => {
      const count = $(selector).length;
      console.log(`   ${selector}: ${count} elementos`);
    });
    
    // Buscar patrones en el HTML
    console.log('\nüîç Buscando patrones en el HTML:');
    const htmlContent = response.data;
    
    // Buscar clases que contengan palabras clave
    const classMatches = htmlContent.match(/class="[^"]*(?:property|inmueble|listing|card|item)[^"]*"/gi) || [];
    console.log(`   Clases con palabras clave: ${classMatches.length}`);
    classMatches.slice(0, 10).forEach((match, index) => {
      console.log(`      ${index + 1}. ${match}`);
    });
    
    // Buscar data-testid
    const testIdMatches = htmlContent.match(/data-testid="[^"]*"/gi) || [];
    console.log(`\n   Data-testid encontrados: ${testIdMatches.length}`);
    testIdMatches.slice(0, 10).forEach((match, index) => {
      console.log(`      ${index + 1}. ${match}`);
    });
    
    // Buscar im√°genes
    console.log('\nüñºÔ∏è  AN√ÅLISIS DE IM√ÅGENES:');
    const images = $('img');
    console.log(`   Total im√°genes: ${images.length}`);
    
    const fincaraizImages: string[] = [];
    images.each((index, img) => {
      const $img = $(img);
      const src = $img.attr('src');
      const dataSrc = $img.attr('data-src');
      const alt = $img.attr('alt');
      
      if (src && (src.includes('fincaraiz') || src.includes('finca'))) {
        fincaraizImages.push(src);
        console.log(`   üì∑ Imagen Fincaraiz ${fincaraizImages.length}: ${src}`);
        console.log(`      Alt: ${alt || 'N/A'}`);
      }
    });
    
    console.log(`\n   Im√°genes de Fincaraiz encontradas: ${fincaraizImages.length}`);
    
    // Buscar enlaces de propiedades
    console.log('\nüîó AN√ÅLISIS DE ENLACES:');
    const links = $('a');
    console.log(`   Total enlaces: ${links.length}`);
    
    const propertyLinks: string[] = [];
    links.each((index, link) => {
      const $link = $(link);
      const href = $link.attr('href');
      
      if (href && (href.includes('/proyectos-vivienda/') || href.includes('/inmueble/'))) {
        propertyLinks.push(href);
        console.log(`   üîó Enlace de propiedad ${propertyLinks.length}: ${href}`);
      }
    });
    
    console.log(`\n   Enlaces de propiedades encontrados: ${propertyLinks.length}`);
    
    // Buscar precios
    console.log('\nüí∞ AN√ÅLISIS DE PRECIOS:');
    const priceMatches = htmlContent.match(/\$[\d.,]+/g) || [];
    console.log(`   Precios encontrados: ${priceMatches.length}`);
    priceMatches.slice(0, 10).forEach((price, index) => {
      console.log(`      ${index + 1}. ${price}`);
    });
    
    // M√©todo 2: An√°lisis de propiedad espec√≠fica
    console.log('\nüöÄ M√âTODO 2: An√°lisis de propiedad espec√≠fica\n');
    console.log(`üìç Analizando: ${samplePropertyUrl}\n`);
    
    const propertyResponse = await axios.get(samplePropertyUrl, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
      }
    });
    
    const $property = cheerio.load(propertyResponse.data);
    
    console.log('üìÑ Analizando propiedad espec√≠fica...');
    console.log(`üìä Tama√±o del HTML: ${propertyResponse.data.length} caracteres\n`);
    
    // Extraer informaci√≥n de la propiedad
    const title = $property('h1').first().text().trim();
    console.log(`üìù T√≠tulo: ${title || 'NO ENCONTRADO'}`);
    
    // Buscar precio
    const priceSelectors = ['.price', '[data-testid*="price"]', '.valor', '.cost'];
    let price = '';
    for (const selector of priceSelectors) {
      const priceEl = $property(selector).first();
      if (priceEl.length > 0) {
        price = priceEl.text().trim();
        break;
      }
    }
    
    if (!price) {
      const propertyText = $property.text();
      const priceMatch = propertyText.match(/\$[\d.,]+/);
      if (priceMatch) price = priceMatch[0];
    }
    
    console.log(`üí∞ Precio: ${price || 'NO ENCONTRADO'}`);
    
    // Buscar im√°genes de la propiedad
    console.log('\nüñºÔ∏è  IM√ÅGENES DE LA PROPIEDAD:');
    const propertyImages = $property('img');
    console.log(`   Total im√°genes: ${propertyImages.length}`);
    
    const validImages: string[] = [];
    propertyImages.each((index, img) => {
      const $img = $property(img);
      const src = $img.attr('src');
      const dataSrc = $img.attr('data-src');
      const alt = $img.attr('alt');
      
      if (src && src.startsWith('http') && (src.includes('fincaraiz') || src.includes('finca') || src.includes('cloudfront') || src.includes('amazonaws'))) {
        validImages.push(src);
        console.log(`   üì∑ Imagen v√°lida ${validImages.length}: ${src}`);
        console.log(`      Alt: ${alt || 'N/A'}`);
      }
    });
    
    console.log(`\n   Im√°genes v√°lidas encontradas: ${validImages.length}`);
    
    // Buscar caracter√≠sticas
    console.log('\nüè† CARACTER√çSTICAS:');
    const propertyText = $property.text();
    
    const roomsMatch = propertyText.match(/(\d+)\s*(?:hab|habitacion|alcoba|dormitorio)/i);
    const bathsMatch = propertyText.match(/(\d+)\s*(?:ba√±o|ba√±os|bath)/i);
    const areaMatch = propertyText.match(/(\d+(?:\.\d+)?)\s*m[¬≤2]/i);
    
    console.log(`   üè† Habitaciones: ${roomsMatch ? roomsMatch[1] : 'NO ENCONTRADO'}`);
    console.log(`   üöø Ba√±os: ${bathsMatch ? bathsMatch[1] : 'NO ENCONTRADO'}`);
    console.log(`   üìê √Årea: ${areaMatch ? areaMatch[1] : 'NO ENCONTRADO'}m¬≤`);
    
    // Resumen final
    console.log('\nüìä RESUMEN FINAL:');
    console.log(`   P√°gina de resultados:`);
    console.log(`     - Enlaces de propiedades: ${propertyLinks.length}`);
    console.log(`     - Im√°genes de Fincaraiz: ${fincaraizImages.length}`);
    console.log(`     - Precios encontrados: ${priceMatches.length}`);
    console.log(`   Propiedad espec√≠fica:`);
    console.log(`     - T√≠tulo: ${title ? 'S√ç' : 'NO'}`);
    console.log(`     - Precio: ${price ? 'S√ç' : 'NO'}`);
    console.log(`     - Im√°genes v√°lidas: ${validImages.length}`);
    console.log(`     - Caracter√≠sticas: ${roomsMatch && bathsMatch && areaMatch ? 'COMPLETAS' : 'INCOMPLETAS'}`);

  } catch (error) {
    console.error('‚ùå Error en el an√°lisis:', error);
  }
}

// Ejecutar el an√°lisis
debugFincaraizHtml().catch(console.error);
